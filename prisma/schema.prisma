// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Device {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  code          String        @unique
  deviceType    DeviceType
  name          String        @unique
  manufacturer  Manufacturer
  specification Specification
  buyOptions    BuyOptions[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  CartDetail    CartDetail[]
  OrderDetail   OrderDetail[]

  @@map("devices")
}

enum DeviceType {
  laptop
  smartphone
  tablet
}

enum Manufacturer {
  Acer
  Apple
  Asus
  Dell
  Gigabyte
  HP
  Lenovo
  LG
  Microsoft
  MSI
  Nokia
  OPPO
  Samsung
  Realme
  Xiaomi
  Vivo
}

type Specification {
  cpu         String
  backCamera  String
  frontCamera String
  gpu         String
  screen      String
}

type BuyOptions {
  color     String?
  ram       String?
  storage   String?
  price     Int
  inStock   Int
  imagesUrl String[]
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String   @unique
  password    String
  name        String
  phoneNumber String
  cart        Cart?
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("users")
}

model Cart {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  user        User         @relation(fields: [userId], references: [id])
  cartDetails CartDetail[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  userId String @unique @db.ObjectId

  @@map("carts")
}

model CartDetail {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  device     Device   @relation(fields: [deviceId], references: [id])
  buyOptions Int /// the index of buyOptions of device
  quantity   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  cart     Cart   @relation(fields: [cartId], references: [id])
  cartId   String @db.ObjectId
  deviceId String @db.ObjectId

  @@unique([cartId, deviceId, buyOptions])
  @@map("cartDetails")
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  user         User          @relation(fields: [userId], references: [id])
  userId       String        @unique @db.ObjectId
  orderDetails OrderDetail[]
  createdAt    DateTime      @default(now())

  @@map("orders")
}

model OrderDetail {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  device     Device @relation(fields: [deviceId], references: [id])
  buyOptions Int /// the index of buyOptions of device
  price      Int
  quantity   Int
  total      String

  order    Order  @relation(fields: [orderId], references: [id])
  orderId  String @db.ObjectId
  deviceId String @db.ObjectId

  @@unique([deviceId, buyOptions])
  @@map("orderDetails")
}
